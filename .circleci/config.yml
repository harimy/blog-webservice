version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.0.0
  aws-code-deploy: circleci/aws-code-deploy@2.0.0
  aws-cli: circleci/aws-cli@3.1.3
jobs:
  build:
    docker:
      - image: cimg/openjdk:8.0.292
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
#      - run:
#          name: Test
#          command: mvn test
      - run:
          name: Create zip file for deploy
          command: |
            mkdir -p before-deploy
            cp scripts/*.sh before-deploy/
            cp appspec.yml before-deploy/
            cp target/*.jar before-deploy/
            cd before-deploy && zip -r blog-webservice.zip *
            cd ../ && mkdir -p deploy
            mv before-deploy/blog-webservice.zip deploy/blog-webservice.zip
      # debug
      - run:
          name: pwd
          command:
            pwd
      - run:
          name: ls -la
          command:
            ls -la
      - persist_to_workspace: # job 간에 파일공유를 가능하게 하는 옵션
          root: .
          paths:
            - deploy

  deploy:
    executor: aws-cli/default
    docker:
      - image: cimg/openjdk:8.0.292
    steps:
      - attach_workspace: # persist_to_workspace 에서 보관한 데이터에 접근 가능
          at: .
      - aws-s3/sync:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: deploy/*
          to: 's3://rimha-blog-build' # S3 버킷
      - aws-s3/copy:
          from: deploy/*
          to: 's3://rimha-blog-build' # S3 버킷
          aws-region: AWS_DEFAULT_REGION
      - aws-code-deploy/deploy-bundle:
          application-name: rimha-blog
          deployment-group: rimha-blog-group
          deployment-config: CodeDeployDefault.AllAtOnce
          bundle-bucket: rimha-blog-build
          bundle-key: blog-webservice
          bundle-type: zip


workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - main
          context: AWS
          requires:
            - build
